---
version: 2.1

jobs:
  readme:
    docker:
      - image: circleci/node:13.10.1
    steps:
      - checkout
      - run:
          command: npm install
          working_directory: ./tests
      - run:
          command: npm test
          working_directory: ./tests

  js:
    docker:
      - image: circleci/node:13.10.1
    steps:
      - checkout
      - run:
          command: npm install
          working_directory: ./js/example
      - run:
          command: npm test
          working_directory: ./js/example

  ts:
    docker:
      - image: circleci/node:13.10.1
    steps:
      - checkout
      - run:
          command: npm install
          working_directory: ./ts/example
      - run:
          command: npm test
          working_directory: ./ts/example

  swift:
    docker:
      - image: swift:5.1.5
    steps:
      - checkout
      - run:
          command: swift test --enable-test-discovery
          working_directory: ./swift/example

  cs:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.1
    steps:
      - checkout
      - run:
          command: dotnet restore
          working_directory: ./cs/example
      - run:
          command: dotnet test
          working_directory: ./cs/example

  fs:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.1
    steps:
      - checkout
      - run:
          command: dotnet restore
          working_directory: ./fs/example
      - run:
          command: dotnet test
          working_directory: ./fs/example

  go:
    docker:
      - image: circleci/golang:1.14
    steps:
      - checkout
      - run:
          command: go test ./... -v
          working_directory: ./go/example

  py:
    docker:
      - image: circleci/python:3.8.1
    steps:
      - checkout
      - run:
          command: sudo pip install pipenv
          working_directory: ./py/example
      - run:
          command: pipenv install
          working_directory: ./py/example
      - run:
          command: pipenv run typecheck
          working_directory: ./py/example
      - run:
          command: pipenv run test
          working_directory: ./py/example

  java:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - run:
          command: gradle test
          working_directory: ./java/example

  kotlin:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - run:
          command: gradle test
          working_directory: ./kotlin/example

workflows:
  test_all:
    jobs:
      - readme
      - js
      - ts
      - swift
      - cs
      - fs
      - go
      - py
      - java
      - kotlin
